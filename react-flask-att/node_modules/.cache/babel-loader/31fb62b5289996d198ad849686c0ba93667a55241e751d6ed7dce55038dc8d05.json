{"ast":null,"code":"var _jsxFileName = \"/Users/Braydon/Desktop/CSE 120/wdc_talent_review_application/PROTOTYPE_ONE/react-flask-att/src/components/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(null); // Store user ID\n\n  useEffect(() => {\n    const loadUserCredentials = () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        setIsLoggedIn(true);\n        // Optionally, decode the token to extract the user ID and set it\n        // You would typically use a library to decode JWT\n      }\n    };\n    loadUserCredentials();\n  }, []);\n  const login = (token, userId) => {\n    localStorage.setItem('token', token); // Store the token\n    setIsLoggedIn(true);\n    setUserId(userId); // Update the user ID in the context\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUserId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      userId,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"TH2o1bOm1DGTtNWR5HhgoViPexo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","userId","setUserId","loadUserCredentials","storedToken","localStorage","getItem","login","token","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Braydon/Desktop/CSE 120/wdc_talent_review_application/PROTOTYPE_ONE/react-flask-att/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(null);  // Store user ID\n\n  useEffect(() => {\n    const loadUserCredentials = () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        setIsLoggedIn(true);\n        // Optionally, decode the token to extract the user ID and set it\n        // You would typically use a library to decode JWT\n      }\n    };\n\n    loadUserCredentials();\n  }, []);\n\n  const login = (token, userId) => {\n    localStorage.setItem('token', token);  // Store the token\n    setIsLoggedIn(true);\n    setUserId(userId);  // Update the user ID in the context\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUserId(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, userId, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;MAChC,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACjD,IAAIF,WAAW,EAAE;QACfJ,aAAa,CAAC,IAAI,CAAC;QACnB;QACA;MACF;IACF,CAAC;IAEDG,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAGA,CAACC,KAAK,EAAEP,MAAM,KAAK;IAC/BI,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC,CAAC,CAAE;IACvCR,aAAa,CAAC,IAAI,CAAC;IACnBE,SAAS,CAACD,MAAM,CAAC,CAAC,CAAE;EACtB,CAAC;EAED,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCX,aAAa,CAAC,KAAK,CAAC;IACpBE,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEd,UAAU;MAAEE,MAAM;MAAEM,KAAK;MAAEG;IAAO,CAAE;IAAAb,QAAA,EAChEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,GAAA,CAlCWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}