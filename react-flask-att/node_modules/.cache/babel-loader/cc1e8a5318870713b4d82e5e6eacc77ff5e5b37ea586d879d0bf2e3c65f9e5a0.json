{"ast":null,"code":"var _jsxFileName = \"/Users/Braydon/Desktop/CSE 120/wdc_talent_review_application/PROTOTYPE_ONE/react-flask-att/src/components/NomineeEducationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, TextField, Typography, Container, Box, Grid } from '@mui/material';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NomineeEducationForm = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the nominee ID from the URL\n  const navigate = useNavigate();\n  const {\n    authToken\n  } = useAuth();\n  const [educations, setEducations] = useState([{\n    college_name: '',\n    location: '',\n    degree: '',\n    program: '',\n    graduation_year: ''\n  }]);\n  useEffect(() => {\n    const fetchEducationData = async () => {\n      if (!authToken) {\n        console.log(\"No authentication token available.\");\n        return;\n      }\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/nominee/${id}/education`, {\n          headers: {\n            'Authorization': `Bearer ${authToken}`\n          }\n        });\n        const educationData = response.data;\n        if (educationData && educationData.length > 0) {\n          setEducations(educationData);\n        } else {\n          // Initialize with one empty form if no education data exists\n          setEducations([{\n            college_name: '',\n            location: '',\n            degree: '',\n            program: '',\n            graduation_year: ''\n          }]);\n        }\n      } catch (error) {\n        console.error('Failed to fetch education data:', error);\n      }\n    };\n    fetchEducationData();\n  }, [id, authToken]);\n  const handleChange = (index, e) => {\n    const updatedEducations = educations.map((education, i) => {\n      if (i === index) {\n        return {\n          ...education,\n          [e.target.name]: e.target.value\n        };\n      }\n      return education;\n    });\n    setEducations(updatedEducations);\n  };\n  const addEducationForm = () => {\n    setEducations([...educations, {\n      college_name: '',\n      location: '',\n      degree: '',\n      program: '',\n      graduation_year: ''\n    }]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await Promise.all(educations.map(education => axios.post(`http://127.0.0.1:5000/nominee/${id}/education/update`, education, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      }\n    })));\n    navigate('/nominee/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Edit Education Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [educations.map((education, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"College Name\",\n          name: \"college_name\",\n          value: education.college_name,\n          onChange: e => handleChange(index, e),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Location\",\n          name: \"location\",\n          value: education.location,\n          onChange: e => handleChange(index, e),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Degree\",\n          name: \"degree\",\n          value: education.degree,\n          onChange: e => handleChange(index, e),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Program\",\n          name: \"program\",\n          value: education.program,\n          onChange: e => handleChange(index, e),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"date\",\n          label: \"Graduation Year\",\n          name: \"graduation_year\",\n          value: education.graduation_year,\n          onChange: e => handleChange(index, e),\n          margin: \"normal\",\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEducationForm,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Add More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Save All Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => navigate('/nominee/dashboard'),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(NomineeEducationForm, \"XKF4vJBbSmamR3JL+2p5nKd0lkE=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = NomineeEducationForm;\nexport default NomineeEducationForm;\nvar _c;\n$RefreshReg$(_c, \"NomineeEducationForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","Button","TextField","Typography","Container","Box","Grid","useAuth","jsxDEV","_jsxDEV","NomineeEducationForm","_s","id","navigate","authToken","educations","setEducations","college_name","location","degree","program","graduation_year","fetchEducationData","console","log","response","get","headers","educationData","data","length","error","handleChange","index","e","updatedEducations","map","education","i","target","name","value","addEducationForm","handleSubmit","preventDefault","Promise","all","post","maxWidth","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","fullWidth","label","onChange","margin","type","InputLabelProps","shrink","mt","display","justifyContent","onClick","color","_c","$RefreshReg$"],"sources":["/Users/Braydon/Desktop/CSE 120/wdc_talent_review_application/PROTOTYPE_ONE/react-flask-att/src/components/NomineeEducationForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, TextField, Typography, Container, Box, Grid } from '@mui/material';\nimport { useAuth } from './AuthContext';\n\nconst NomineeEducationForm = () => {\n    const { id } = useParams(); // Get the nominee ID from the URL\n    const navigate = useNavigate();\n    const { authToken } = useAuth();\n    const [educations, setEducations] = useState([{\n        college_name: '',\n        location: '',\n        degree: '',\n        program: '',\n        graduation_year: ''\n    }]);\n\n    useEffect(() => {\n        const fetchEducationData = async () => {\n            if (!authToken) {\n                console.log(\"No authentication token available.\");\n                return;\n            }\n            try {\n                const response = await axios.get(`http://127.0.0.1:5000/nominee/${id}/education`, {\n                    headers: { 'Authorization': `Bearer ${authToken}` }\n                });\n                const educationData = response.data;\n                if (educationData && educationData.length > 0) {\n                    setEducations(educationData);\n                } else {\n                    // Initialize with one empty form if no education data exists\n                    setEducations([{\n                        college_name: '',\n                        location: '',\n                        degree: '',\n                        program: '',\n                        graduation_year: ''\n                    }]);\n                }\n            } catch (error) {\n                console.error('Failed to fetch education data:', error);\n            }\n        };\n        fetchEducationData();\n    }, [id, authToken]);\n\n    const handleChange = (index, e) => {\n        const updatedEducations = educations.map((education, i) => {\n            if (i === index) {\n                return { ...education, [e.target.name]: e.target.value };\n            }\n            return education;\n        });\n        setEducations(updatedEducations);\n    };\n\n    const addEducationForm = () => {\n        setEducations([...educations, {\n            college_name: '',\n            location: '',\n            degree: '',\n            program: '',\n            graduation_year: ''\n        }]);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await Promise.all(educations.map(education => \n            axios.post(`http://127.0.0.1:5000/nominee/${id}/education/update`, education, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${authToken}`\n                }\n            })\n        ));\n        navigate('/nominee/dashboard');\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h6\" gutterBottom>Edit Education Details</Typography>\n            <form onSubmit={handleSubmit}>\n                {educations.map((education, index) => (\n                    <Grid container spacing={2} key={index}>\n                        <TextField\n                            fullWidth\n                            label=\"College Name\"\n                            name=\"college_name\"\n                            value={education.college_name}\n                            onChange={(e) => handleChange(index, e)}\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            fullWidth\n                            label=\"Location\"\n                            name=\"location\"\n                            value={education.location}\n                            onChange={(e) => handleChange(index, e)}\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            fullWidth\n                            label=\"Degree\"\n                            name=\"degree\"\n                            value={education.degree}\n                            onChange={(e) => handleChange(index, e)}\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            fullWidth\n                            label=\"Program\"\n                            name=\"program\"\n                            value={education.program}\n                            onChange={(e) => handleChange(index, e)}\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            fullWidth\n                            type=\"date\"\n                            label=\"Graduation Year\"\n                            name=\"graduation_year\"\n                            value={education.graduation_year}\n                            onChange={(e) => handleChange(index, e)}\n                            margin=\"normal\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </Grid>\n                ))}\n                <Box mt={2} display=\"flex\" justifyContent=\"flex-end\">\n                    <Button onClick={addEducationForm} variant=\"contained\" color=\"primary\">Add More</Button>\n                </Box>\n                <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save All Changes</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate('/nominee/dashboard')}>Cancel</Button>\n                </Box>\n            </form>\n        </Container>\n    );\n};\n\nexport default NomineeEducationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}