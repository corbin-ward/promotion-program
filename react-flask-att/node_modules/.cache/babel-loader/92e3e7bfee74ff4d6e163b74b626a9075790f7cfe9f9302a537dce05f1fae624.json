{"ast":null,"code":"var _jsxFileName = \"/Users/Braydon/Desktop/CSE 120/wdc_talent_review_application/PROTOTYPE_ONE/react-flask-att/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from './AuthContext'; // Make sure the path to AuthContext is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  _s();\n  const {\n    authToken,\n    role\n  } = useAuth();\n  const location = useLocation();\n\n  // If no authToken or the user's role is not in the allowedRoles, redirect to login page\n  if (!authToken || !allowedRoles.includes(role)) {\n    // Redirect to login page and save the current location for a potential redirect back after login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"lY/et504y61R7g+SdJxjG0LhBIY=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","authToken","role","location","includes","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Braydon/Desktop/CSE 120/wdc_talent_review_application/PROTOTYPE_ONE/react-flask-att/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from './AuthContext';  // Make sure the path to AuthContext is correct\n\nconst ProtectedRoute = ({ children, allowedRoles }) => {\n    const { authToken, role } = useAuth();\n    const location = useLocation();\n\n    // If no authToken or the user's role is not in the allowedRoles, redirect to login page\n    if (!authToken || !allowedRoles.includes(role)) {\n        // Redirect to login page and save the current location for a potential redirect back after login\n        return <Navigate to=\"/dashboard\" state={{ from: location }} replace />;\n    }\n\n    return children;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,eAAe,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EACrC,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACQ,SAAS,IAAI,CAACF,YAAY,CAACK,QAAQ,CAACF,IAAI,CAAC,EAAE;IAC5C;IACA,oBAAON,OAAA,CAACJ,QAAQ;MAACa,EAAE,EAAC,YAAY;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEJ;MAAS,CAAE;MAACK,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1E;EAEA,OAAOd,QAAQ;AACnB,CAAC;AAACE,EAAA,CAXIH,cAAc;EAAA,QACYH,OAAO,EAClBD,WAAW;AAAA;AAAAoB,EAAA,GAF1BhB,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}