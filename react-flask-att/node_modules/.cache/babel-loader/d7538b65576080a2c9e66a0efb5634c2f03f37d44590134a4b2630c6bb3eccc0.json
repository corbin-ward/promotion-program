{"ast":null,"code":"import axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && error.config && !error.config.__isRetryRequest) {\n    originalRequest._retry = true; // mark it so we know we've already retried\n\n    // Attempt to get a new token\n    try {\n      const refreshToken = localStorage.getItem('refreshToken'); // assuming you store refresh token in local storage\n      const tokenResponse = await axios.post('/refresh_token', {\n        refreshToken\n      });\n      const {\n        accessToken\n      } = tokenResponse.data;\n      localStorage.setItem('authToken', accessToken); // update the token in local storage\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`; // update the token in axios\n      originalRequest.headers['Authorization'] = `Bearer ${accessToken}`; // update the token in the original request\n\n      return api(originalRequest); // retry the original request with the new token\n    } catch (refreshError) {\n      console.error('Unable to refresh token:', refreshError);\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","useNavigate","api","create","baseURL","headers","interceptors","response","use","error","originalRequest","config","status","__isRetryRequest","_retry","refreshToken","localStorage","getItem","tokenResponse","post","accessToken","data","setItem","defaults","common","refreshError","console","Promise","reject"],"sources":["/Users/Braydon/Desktop/CSE 120/wdc_talent_review_application/PROTOTYPE_ONE/react-flask-att/src/api/api.js"],"sourcesContent":["import axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && error.config && !error.config.__isRetryRequest) {\n    originalRequest._retry = true; // mark it so we know we've already retried\n\n    // Attempt to get a new token\n    try {\n      const refreshToken = localStorage.getItem('refreshToken'); // assuming you store refresh token in local storage\n      const tokenResponse = await axios.post('/refresh_token', { refreshToken });\n\n      const { accessToken } = tokenResponse.data;\n      localStorage.setItem('authToken', accessToken); // update the token in local storage\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`; // update the token in axios\n      originalRequest.headers['Authorization'] = `Bearer ${accessToken}`; // update the token in the original request\n\n      return api(originalRequest); // retry the original request with the new token\n    } catch (refreshError) {\n      console.error('Unable to refresh token:', refreshError);\n      return Promise.reject(refreshError);\n    }\n  }\n\n  return Promise.reject(error);\n});\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAACD,QAAQ,IAAIA,QAAQ,EAAE,MAAME,KAAK,IAAI;EACjE,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM;EACpC,IAAIF,KAAK,CAACF,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAIH,KAAK,CAACE,MAAM,IAAI,CAACF,KAAK,CAACE,MAAM,CAACE,gBAAgB,EAAE;IACnFH,eAAe,CAACI,MAAM,GAAG,IAAI,CAAC,CAAC;;IAE/B;IACA,IAAI;MACF,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;MAC3D,MAAMC,aAAa,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,gBAAgB,EAAE;QAAEJ;MAAa,CAAC,CAAC;MAE1E,MAAM;QAAEK;MAAY,CAAC,GAAGF,aAAa,CAACG,IAAI;MAC1CL,YAAY,CAACM,OAAO,CAAC,WAAW,EAAEF,WAAW,CAAC,CAAC,CAAC;MAChDlB,GAAG,CAACqB,QAAQ,CAAClB,OAAO,CAACmB,MAAM,CAAC,eAAe,CAAC,GAAI,UAASJ,WAAY,EAAC,CAAC,CAAC;MACxEV,eAAe,CAACL,OAAO,CAAC,eAAe,CAAC,GAAI,UAASe,WAAY,EAAC,CAAC,CAAC;;MAEpE,OAAOlB,GAAG,CAACQ,eAAe,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOe,YAAY,EAAE;MACrBC,OAAO,CAACjB,KAAK,CAAC,0BAA0B,EAAEgB,YAAY,CAAC;MACvD,OAAOE,OAAO,CAACC,MAAM,CAACH,YAAY,CAAC;IACrC;EACF;EAEA,OAAOE,OAAO,CAACC,MAAM,CAACnB,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}